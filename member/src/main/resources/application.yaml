server:
  port: 8082

spring:
  application:
    name: member

# -------------------------------
# Default profile configuration
# -------------------------------
---
spring:
  config:
    activate:
      on-profile: default

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

  cloud:
    function:
      definition: processEvent
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        processEvent-in-0:
          group: member
          destination: library
          contentType: application/json
        processEvent-out-0:
          destination: library
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

# -------------------------------
# Docker profile configuration
# -------------------------------
---
spring:
  config:
    activate:
      on-profile: docker

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

  cloud:
    function:
      definition: processEvent
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        processEvent-in-0:
          group: member
          destination: library
          contentType: application/json
        processEvent-out-0:
          destination: library
          contentType: application/json
